version: '3'
run: once

vars:
  YAML:
    sh: git ls-files "*.yaml" "*.yml"
  SH:
    sh: git ls-files "*.sh"
  UNIT_TESTS:
    sh: git ls-files "tests/first_time_setup/unit/*.sh"
  E2E_TESTS:
    sh: git ls-files "tests/first_time_setup/e2e/*.sh"

tasks:
  uninstall:
    desc: Uninstall this library and all of its dependencies.
    cmds:
      - rm -rf lib
      - poetry env remove --all
      - pip freeze | grep -v "^-e" | sed "s/@.*//" | xargs pip uninstall -y

  install:
    desc: Install this library and all of its dependencies.
    cmds:
      - ./bashdep.sh
      - poetry install --no-root --with dev --sync

  format:
    desc: Format the code using different formatters.
    vars:
      YAML:
        ref: .YAML | splitLines | join " "
      SH:
        ref: .SH | splitLines | join " "
    cmds:
      - poetry run codespell --write-changes {{.YAML}} {{.MD}} {{.SH}}
      - poetry run mdformat --wrap 79 --number README.md
      - poetry run shfmt --write --simplify {{.SH}}
      - poetry run pyproject-fmt ./pyproject.toml

  lint:
    desc: Lint the code using different linters.
    vars:
      YAML:
        ref: .YAML | splitLines | join " "
      SH:
        ref: .SH | splitLines | join " "
    cmds:
      - poetry run codespell {{.YAML}} {{.MD}} {{.SH}}
      - poetry run yamllint --strict {{.YAML}}
      - poetry run mdformat --wrap 79 --number --check README.md
      - poetry run shellcheck {{.SH}}

  test:
    desc: Test the library.
    vars:
      UNIT_TESTS:
        ref: .UNIT_TESTS | splitLines | join " "
      E2E_TESTS:
        ref: .E2E_TESTS | splitLines | join " "
    cmds:
      - lib/bashunit --parallel --simple {{.UNIT_TESTS}}
      - bash {{.E2E_TESTS}}
